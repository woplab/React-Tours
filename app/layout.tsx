// app/layout.tsx
'use client'; // Mark this file as a Client Component
import type { Metadata } from 'next';
import { useEffect } from 'react';
import { Provider } from 'react-redux';
import { configureStore } from '@reduxjs/toolkit';
import dynamic from 'next/dynamic'; // Import dynamic from 'next/dynamic' for client-side rendering
import store from './store';

import './globals.css';

import Header from './ui/common/header/header';
import Footer from './ui/common/footer/footer';

// Define metadata directly without exporting it
const metadata: Metadata = {
    title: 'Create Next App',
    description: 'Generated by create next app',
};

// Dynamic import for Provider to ensure it's only rendered on the client-side
const DynamicProvider = dynamic(() => import('react-redux').then((mod) => mod.Provider), {
    ssr: false,
});

export default function RootLayout({
                                       children,
                                   }: Readonly<{
    children: React.ReactNode;
}>) {
    useEffect(() => {
        // Add any initialization logic here if needed
    }, []);

    return (
        <html lang="en">
        <body suppressHydrationWarning={true}>
        <DynamicProvider store={store}> {/* Render Provider only on the client-side */}
            <Header />
            <div className="">{children}</div>
            <Footer />
        </DynamicProvider>
        </body>
        </html>
    );
}
